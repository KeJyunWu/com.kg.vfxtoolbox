// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Core
#pragma kernel Stamp

Texture2D<float4> m_source;
RWTexture2D<float4> m_result;
float2 m_startPointPos;
bool m_stampUVFlip_w;
bool m_stampUVFlip_h;
int m_anchorMode;

[numthreads(1,1,1)]
void Core (uint3 id : SV_DispatchThreadID)
{
    if (m_anchorMode==1)
        m_result[id.xy + m_startPointPos] = m_source[id.xy];
    else if (m_anchorMode == 0)
    {
        uint _width, _height;
        m_source.GetDimensions(_width, _height);
        m_result[float2(m_startPointPos.x + id.x, m_startPointPos.y - id.y)] = m_source[float2(id.x, (_height - 1) - id.y)];
    }
}

[numthreads(1,1,1)]
void Stamp (uint3 id : SV_DispatchThreadID)
{
    float4 _r = m_result[id.xy];

    uint _width, _height;
    m_source.GetDimensions(_width, _height);

    float4 _s = m_source[float2(m_stampUVFlip_w? _width- id.x : id.x, m_stampUVFlip_h ? _height - id.y : id.y)];
    m_result[id.xy] = lerp(_r, _s, _s.w);
}
